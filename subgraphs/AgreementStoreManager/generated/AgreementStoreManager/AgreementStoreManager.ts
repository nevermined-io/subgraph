// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AgreementStoreManager__getAgreementResult {
  value0: Bytes;
  value1: Address;
  value2: Address;
  value3: Array<Bytes>;
  value4: Address;
  value5: BigInt;

  constructor(
    value0: Bytes,
    value1: Address,
    value2: Address,
    value3: Array<Bytes>,
    value4: Address,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromFixedBytesArray(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }
}

export class AgreementStoreManager extends ethereum.SmartContract {
  static bind(address: Address): AgreementStoreManager {
    return new AgreementStoreManager("AgreementStoreManager", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createAgreement(
    _id: Bytes,
    _did: Bytes,
    _conditionTypes: Array<Address>,
    _conditionIds: Array<Bytes>,
    _timeLocks: Array<BigInt>,
    _timeOuts: Array<BigInt>,
    _creator: Address
  ): BigInt {
    let result = super.call(
      "createAgreement",
      "createAgreement(bytes32,bytes32,address[],bytes32[],uint256[],uint256[],address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_id),
        ethereum.Value.fromFixedBytes(_did),
        ethereum.Value.fromAddressArray(_conditionTypes),
        ethereum.Value.fromFixedBytesArray(_conditionIds),
        ethereum.Value.fromUnsignedBigIntArray(_timeLocks),
        ethereum.Value.fromUnsignedBigIntArray(_timeOuts),
        ethereum.Value.fromAddress(_creator)
      ]
    );

    return result[0].toBigInt();
  }

  try_createAgreement(
    _id: Bytes,
    _did: Bytes,
    _conditionTypes: Array<Address>,
    _conditionIds: Array<Bytes>,
    _timeLocks: Array<BigInt>,
    _timeOuts: Array<BigInt>,
    _creator: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createAgreement",
      "createAgreement(bytes32,bytes32,address[],bytes32[],uint256[],uint256[],address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_id),
        ethereum.Value.fromFixedBytes(_did),
        ethereum.Value.fromAddressArray(_conditionTypes),
        ethereum.Value.fromFixedBytesArray(_conditionIds),
        ethereum.Value.fromUnsignedBigIntArray(_timeLocks),
        ethereum.Value.fromUnsignedBigIntArray(_timeOuts),
        ethereum.Value.fromAddress(_creator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createAgreement1(
    _id: Bytes,
    _did: Bytes,
    _conditionTypes: Array<Address>,
    _conditionIds: Array<Bytes>,
    _timeLocks: Array<BigInt>,
    _timeOuts: Array<BigInt>
  ): BigInt {
    let result = super.call(
      "createAgreement",
      "createAgreement(bytes32,bytes32,address[],bytes32[],uint256[],uint256[]):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_id),
        ethereum.Value.fromFixedBytes(_did),
        ethereum.Value.fromAddressArray(_conditionTypes),
        ethereum.Value.fromFixedBytesArray(_conditionIds),
        ethereum.Value.fromUnsignedBigIntArray(_timeLocks),
        ethereum.Value.fromUnsignedBigIntArray(_timeOuts)
      ]
    );

    return result[0].toBigInt();
  }

  try_createAgreement1(
    _id: Bytes,
    _did: Bytes,
    _conditionTypes: Array<Address>,
    _conditionIds: Array<Bytes>,
    _timeLocks: Array<BigInt>,
    _timeOuts: Array<BigInt>
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createAgreement",
      "createAgreement(bytes32,bytes32,address[],bytes32[],uint256[],uint256[]):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_id),
        ethereum.Value.fromFixedBytes(_did),
        ethereum.Value.fromAddressArray(_conditionTypes),
        ethereum.Value.fromFixedBytesArray(_conditionIds),
        ethereum.Value.fromUnsignedBigIntArray(_timeLocks),
        ethereum.Value.fromUnsignedBigIntArray(_timeOuts)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAgreement(_id: Bytes): AgreementStoreManager__getAgreementResult {
    let result = super.call(
      "getAgreement",
      "getAgreement(bytes32):(bytes32,address,address,bytes32[],address,uint256)",
      [ethereum.Value.fromFixedBytes(_id)]
    );

    return new AgreementStoreManager__getAgreementResult(
      result[0].toBytes(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBytesArray(),
      result[4].toAddress(),
      result[5].toBigInt()
    );
  }

  try_getAgreement(
    _id: Bytes
  ): ethereum.CallResult<AgreementStoreManager__getAgreementResult> {
    let result = super.tryCall(
      "getAgreement",
      "getAgreement(bytes32):(bytes32,address,address,bytes32[],address,uint256)",
      [ethereum.Value.fromFixedBytes(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AgreementStoreManager__getAgreementResult(
        value[0].toBytes(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBytesArray(),
        value[4].toAddress(),
        value[5].toBigInt()
      )
    );
  }

  getAgreementDIDOwner(_id: Bytes): Address {
    let result = super.call(
      "getAgreementDIDOwner",
      "getAgreementDIDOwner(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(_id)]
    );

    return result[0].toAddress();
  }

  try_getAgreementDIDOwner(_id: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAgreementDIDOwner",
      "getAgreementDIDOwner(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAgreementIdsForDID(_did: Bytes): Array<Bytes> {
    let result = super.call(
      "getAgreementIdsForDID",
      "getAgreementIdsForDID(bytes32):(bytes32[])",
      [ethereum.Value.fromFixedBytes(_did)]
    );

    return result[0].toBytesArray();
  }

  try_getAgreementIdsForDID(_did: Bytes): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getAgreementIdsForDID",
      "getAgreementIdsForDID(bytes32):(bytes32[])",
      [ethereum.Value.fromFixedBytes(_did)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getAgreementIdsForTemplateId(_templateId: Address): Array<Bytes> {
    let result = super.call(
      "getAgreementIdsForTemplateId",
      "getAgreementIdsForTemplateId(address):(bytes32[])",
      [ethereum.Value.fromAddress(_templateId)]
    );

    return result[0].toBytesArray();
  }

  try_getAgreementIdsForTemplateId(
    _templateId: Address
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getAgreementIdsForTemplateId",
      "getAgreementIdsForTemplateId(address):(bytes32[])",
      [ethereum.Value.fromAddress(_templateId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  getAgreementListSize(): BigInt {
    let result = super.call(
      "getAgreementListSize",
      "getAgreementListSize():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getAgreementListSize(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAgreementListSize",
      "getAgreementListSize():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDIDRegistryAddress(): Address {
    let result = super.call(
      "getDIDRegistryAddress",
      "getDIDRegistryAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getDIDRegistryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getDIDRegistryAddress",
      "getDIDRegistryAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAgreementDIDOwner(_id: Bytes, _owner: Address): boolean {
    let result = super.call(
      "isAgreementDIDOwner",
      "isAgreementDIDOwner(bytes32,address):(bool)",
      [ethereum.Value.fromFixedBytes(_id), ethereum.Value.fromAddress(_owner)]
    );

    return result[0].toBoolean();
  }

  try_isAgreementDIDOwner(
    _id: Bytes,
    _owner: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAgreementDIDOwner",
      "isAgreementDIDOwner(bytes32,address):(bool)",
      [ethereum.Value.fromFixedBytes(_id), ethereum.Value.fromAddress(_owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAgreementDIDProvider(_id: Bytes, _provider: Address): boolean {
    let result = super.call(
      "isAgreementDIDProvider",
      "isAgreementDIDProvider(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_id),
        ethereum.Value.fromAddress(_provider)
      ]
    );

    return result[0].toBoolean();
  }

  try_isAgreementDIDProvider(
    _id: Bytes,
    _provider: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAgreementDIDProvider",
      "isAgreementDIDProvider(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_id),
        ethereum.Value.fromAddress(_provider)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class CreateAgreementCall extends ethereum.Call {
  get inputs(): CreateAgreementCall__Inputs {
    return new CreateAgreementCall__Inputs(this);
  }

  get outputs(): CreateAgreementCall__Outputs {
    return new CreateAgreementCall__Outputs(this);
  }
}

export class CreateAgreementCall__Inputs {
  _call: CreateAgreementCall;

  constructor(call: CreateAgreementCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _conditionTypes(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get _conditionIds(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }

  get _timeLocks(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get _creator(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class CreateAgreementCall__Outputs {
  _call: CreateAgreementCall;

  constructor(call: CreateAgreementCall) {
    this._call = call;
  }

  get size(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateAgreement1Call extends ethereum.Call {
  get inputs(): CreateAgreement1Call__Inputs {
    return new CreateAgreement1Call__Inputs(this);
  }

  get outputs(): CreateAgreement1Call__Outputs {
    return new CreateAgreement1Call__Outputs(this);
  }
}

export class CreateAgreement1Call__Inputs {
  _call: CreateAgreement1Call;

  constructor(call: CreateAgreement1Call) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _conditionTypes(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get _conditionIds(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }

  get _timeLocks(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }
}

export class CreateAgreement1Call__Outputs {
  _call: CreateAgreement1Call;

  constructor(call: CreateAgreement1Call) {
    this._call = call;
  }

  get size(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateAgreementAndPayCall extends ethereum.Call {
  get inputs(): CreateAgreementAndPayCall__Inputs {
    return new CreateAgreementAndPayCall__Inputs(this);
  }

  get outputs(): CreateAgreementAndPayCall__Outputs {
    return new CreateAgreementAndPayCall__Outputs(this);
  }
}

export class CreateAgreementAndPayCall__Inputs {
  _call: CreateAgreementAndPayCall;

  constructor(call: CreateAgreementAndPayCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _conditionTypes(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get _conditionIds(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }

  get _timeLocks(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get _creator(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _idx(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _rewardAddress(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[9].value.toAddress();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[10].value.toBigIntArray();
  }

  get _receivers(): Array<Address> {
    return this._call.inputValues[11].value.toAddressArray();
  }
}

export class CreateAgreementAndPayCall__Outputs {
  _call: CreateAgreementAndPayCall;

  constructor(call: CreateAgreementAndPayCall) {
    this._call = call;
  }
}

export class GrantProxyRoleCall extends ethereum.Call {
  get inputs(): GrantProxyRoleCall__Inputs {
    return new GrantProxyRoleCall__Inputs(this);
  }

  get outputs(): GrantProxyRoleCall__Outputs {
    return new GrantProxyRoleCall__Outputs(this);
  }
}

export class GrantProxyRoleCall__Inputs {
  _call: GrantProxyRoleCall;

  constructor(call: GrantProxyRoleCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GrantProxyRoleCall__Outputs {
  _call: GrantProxyRoleCall;

  constructor(call: GrantProxyRoleCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _conditionStoreManagerAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _templateStoreManagerAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _didRegistryAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeProxyRoleCall extends ethereum.Call {
  get inputs(): RevokeProxyRoleCall__Inputs {
    return new RevokeProxyRoleCall__Inputs(this);
  }

  get outputs(): RevokeProxyRoleCall__Outputs {
    return new RevokeProxyRoleCall__Outputs(this);
  }
}

export class RevokeProxyRoleCall__Inputs {
  _call: RevokeProxyRoleCall;

  constructor(call: RevokeProxyRoleCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RevokeProxyRoleCall__Outputs {
  _call: RevokeProxyRoleCall;

  constructor(call: RevokeProxyRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
