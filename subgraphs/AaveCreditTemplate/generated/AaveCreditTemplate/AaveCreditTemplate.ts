// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AgreementCreated extends ethereum.Event {
  get params(): AgreementCreated__Params {
    return new AgreementCreated__Params(this);
  }
}

export class AgreementCreated__Params {
  _event: AgreementCreated;

  constructor(event: AgreementCreated) {
    this._event = event;
  }

  get _agreementId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _accessConsumer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _accessProvider(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _timeLocks(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._event.parameters[5].value.toBigIntArray();
  }

  get _conditionIdSeeds(): Array<Bytes> {
    return this._event.parameters[6].value.toBytesArray();
  }

  get _conditionIds(): Array<Bytes> {
    return this._event.parameters[7].value.toBytesArray();
  }

  get _idSeed(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }

  get _creator(): Address {
    return this._event.parameters[9].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class VaultCreated extends ethereum.Event {
  get params(): VaultCreated__Params {
    return new VaultCreated__Params(this);
  }
}

export class VaultCreated__Params {
  _event: VaultCreated;

  constructor(event: VaultCreated) {
    this._event = event;
  }

  get _vaultAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _lender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _borrower(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class AaveCreditTemplate__getAgreementDataResult {
  value0: Address;
  value1: Address;
  value2: Bytes;

  constructor(value0: Address, value1: Address, value2: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromFixedBytes(this.value2));
    return map;
  }

  getAccessConsumer(): Address {
    return this.value0;
  }

  getAccessProvider(): Address {
    return this.value1;
  }

  getDid(): Bytes {
    return this.value2;
  }
}

export class AaveCreditTemplate extends ethereum.SmartContract {
  static bind(address: Address): AaveCreditTemplate {
    return new AaveCreditTemplate("AaveCreditTemplate", address);
  }

  addressToBytes32(_addr: Address): Bytes {
    let result = super.call(
      "addressToBytes32",
      "addressToBytes32(address):(bytes32)",
      [ethereum.Value.fromAddress(_addr)]
    );

    return result[0].toBytes();
  }

  try_addressToBytes32(_addr: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "addressToBytes32",
      "addressToBytes32(address):(bytes32)",
      [ethereum.Value.fromAddress(_addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  bytes32ToAddress(_b32: Bytes): Address {
    let result = super.call(
      "bytes32ToAddress",
      "bytes32ToAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(_b32)]
    );

    return result[0].toAddress();
  }

  try_bytes32ToAddress(_b32: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "bytes32ToAddress",
      "bytes32ToAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(_b32)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  calculateTotalAmount(_amounts: Array<BigInt>): BigInt {
    let result = super.call(
      "calculateTotalAmount",
      "calculateTotalAmount(uint256[]):(uint256)",
      [ethereum.Value.fromUnsignedBigIntArray(_amounts)]
    );

    return result[0].toBigInt();
  }

  try_calculateTotalAmount(
    _amounts: Array<BigInt>
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateTotalAmount",
      "calculateTotalAmount(uint256[]):(uint256)",
      [ethereum.Value.fromUnsignedBigIntArray(_amounts)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  deployVault(
    _lendingPool: Address,
    _dataProvider: Address,
    _weth: Address,
    _agreementFee: BigInt,
    _treasuryAddress: Address,
    _borrower: Address,
    _lender: Address
  ): Address {
    let result = super.call(
      "deployVault",
      "deployVault(address,address,address,uint256,address,address,address):(address)",
      [
        ethereum.Value.fromAddress(_lendingPool),
        ethereum.Value.fromAddress(_dataProvider),
        ethereum.Value.fromAddress(_weth),
        ethereum.Value.fromUnsignedBigInt(_agreementFee),
        ethereum.Value.fromAddress(_treasuryAddress),
        ethereum.Value.fromAddress(_borrower),
        ethereum.Value.fromAddress(_lender)
      ]
    );

    return result[0].toAddress();
  }

  try_deployVault(
    _lendingPool: Address,
    _dataProvider: Address,
    _weth: Address,
    _agreementFee: BigInt,
    _treasuryAddress: Address,
    _borrower: Address,
    _lender: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployVault",
      "deployVault(address,address,address,uint256,address,address,address):(address)",
      [
        ethereum.Value.fromAddress(_lendingPool),
        ethereum.Value.fromAddress(_dataProvider),
        ethereum.Value.fromAddress(_weth),
        ethereum.Value.fromUnsignedBigInt(_agreementFee),
        ethereum.Value.fromAddress(_treasuryAddress),
        ethereum.Value.fromAddress(_borrower),
        ethereum.Value.fromAddress(_lender)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAgreementData(_id: Bytes): AaveCreditTemplate__getAgreementDataResult {
    let result = super.call(
      "getAgreementData",
      "getAgreementData(bytes32):(address,address,bytes32)",
      [ethereum.Value.fromFixedBytes(_id)]
    );

    return new AaveCreditTemplate__getAgreementDataResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBytes()
    );
  }

  try_getAgreementData(
    _id: Bytes
  ): ethereum.CallResult<AaveCreditTemplate__getAgreementDataResult> {
    let result = super.tryCall(
      "getAgreementData",
      "getAgreementData(bytes32):(address,address,bytes32)",
      [ethereum.Value.fromFixedBytes(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AaveCreditTemplate__getAgreementDataResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBytes()
      )
    );
  }

  getConditionTypes(): Array<Address> {
    let result = super.call(
      "getConditionTypes",
      "getConditionTypes():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getConditionTypes(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getConditionTypes",
      "getConditionTypes():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getCurrentBlockNumber(): BigInt {
    let result = super.call(
      "getCurrentBlockNumber",
      "getCurrentBlockNumber():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentBlockNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentBlockNumber",
      "getCurrentBlockNumber():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNvmConfigAddress(): Address {
    let result = super.call(
      "getNvmConfigAddress",
      "getNvmConfigAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getNvmConfigAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getNvmConfigAddress",
      "getNvmConfigAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTrustedForwarder(): Address {
    let result = super.call(
      "getTrustedForwarder",
      "getTrustedForwarder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getTrustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getTrustedForwarder",
      "getTrustedForwarder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getVaultForAgreement(_agreementId: Bytes): Address {
    let result = super.call(
      "getVaultForAgreement",
      "getVaultForAgreement(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(_agreementId)]
    );

    return result[0].toAddress();
  }

  try_getVaultForAgreement(_agreementId: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getVaultForAgreement",
      "getVaultForAgreement(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(_agreementId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isContract(addr: Address): boolean {
    let result = super.call("isContract", "isContract(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBoolean();
  }

  try_isContract(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isContract", "isContract(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vaultLibrary(): Address {
    let result = super.call("vaultLibrary", "vaultLibrary():(address)", []);

    return result[0].toAddress();
  }

  try_vaultLibrary(): ethereum.CallResult<Address> {
    let result = super.tryCall("vaultLibrary", "vaultLibrary():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ChangeCreditVaultLibraryCall extends ethereum.Call {
  get inputs(): ChangeCreditVaultLibraryCall__Inputs {
    return new ChangeCreditVaultLibraryCall__Inputs(this);
  }

  get outputs(): ChangeCreditVaultLibraryCall__Outputs {
    return new ChangeCreditVaultLibraryCall__Outputs(this);
  }
}

export class ChangeCreditVaultLibraryCall__Inputs {
  _call: ChangeCreditVaultLibraryCall;

  constructor(call: ChangeCreditVaultLibraryCall) {
    this._call = call;
  }

  get _vaultLibrary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeCreditVaultLibraryCall__Outputs {
  _call: ChangeCreditVaultLibraryCall;

  constructor(call: ChangeCreditVaultLibraryCall) {
    this._call = call;
  }
}

export class CreateAgreementCall extends ethereum.Call {
  get inputs(): CreateAgreementCall__Inputs {
    return new CreateAgreementCall__Inputs(this);
  }

  get outputs(): CreateAgreementCall__Outputs {
    return new CreateAgreementCall__Outputs(this);
  }
}

export class CreateAgreementCall__Inputs {
  _call: CreateAgreementCall;

  constructor(call: CreateAgreementCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _conditionIds(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get _timeLocks(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class CreateAgreementCall__Outputs {
  _call: CreateAgreementCall;

  constructor(call: CreateAgreementCall) {
    this._call = call;
  }
}

export class CreateAgreement1Call extends ethereum.Call {
  get inputs(): CreateAgreement1Call__Inputs {
    return new CreateAgreement1Call__Inputs(this);
  }

  get outputs(): CreateAgreement1Call__Outputs {
    return new CreateAgreement1Call__Outputs(this);
  }
}

export class CreateAgreement1Call__Inputs {
  _call: CreateAgreement1Call;

  constructor(call: CreateAgreement1Call) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _conditionIds(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get _timeLocks(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _accessConsumer(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class CreateAgreement1Call__Outputs {
  _call: CreateAgreement1Call;

  constructor(call: CreateAgreement1Call) {
    this._call = call;
  }
}

export class CreateAgreement2Call extends ethereum.Call {
  get inputs(): CreateAgreement2Call__Inputs {
    return new CreateAgreement2Call__Inputs(this);
  }

  get outputs(): CreateAgreement2Call__Outputs {
    return new CreateAgreement2Call__Outputs(this);
  }
}

export class CreateAgreement2Call__Inputs {
  _call: CreateAgreement2Call;

  constructor(call: CreateAgreement2Call) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _lendingPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _dataProvider(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _weth(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _agreementFee(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _treasuryAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _did(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get _conditionIds(): Array<Bytes> {
    return this._call.inputValues[7].value.toBytesArray();
  }

  get _timeLocks(): Array<BigInt> {
    return this._call.inputValues[8].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._call.inputValues[9].value.toBigIntArray();
  }

  get _lender(): Address {
    return this._call.inputValues[10].value.toAddress();
  }
}

export class CreateAgreement2Call__Outputs {
  _call: CreateAgreement2Call;

  constructor(call: CreateAgreement2Call) {
    this._call = call;
  }
}

export class CreateAgreementAndPayCall extends ethereum.Call {
  get inputs(): CreateAgreementAndPayCall__Inputs {
    return new CreateAgreementAndPayCall__Inputs(this);
  }

  get outputs(): CreateAgreementAndPayCall__Outputs {
    return new CreateAgreementAndPayCall__Outputs(this);
  }
}

export class CreateAgreementAndPayCall__Inputs {
  _call: CreateAgreementAndPayCall;

  constructor(call: CreateAgreementAndPayCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _conditionIds(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get _timeLocks(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _idx(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _rewardAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[8].value.toBigIntArray();
  }

  get _receivers(): Array<Address> {
    return this._call.inputValues[9].value.toAddressArray();
  }
}

export class CreateAgreementAndPayCall__Outputs {
  _call: CreateAgreementAndPayCall;

  constructor(call: CreateAgreementAndPayCall) {
    this._call = call;
  }
}

export class CreateAgreementAndPayEscrowCall extends ethereum.Call {
  get inputs(): CreateAgreementAndPayEscrowCall__Inputs {
    return new CreateAgreementAndPayEscrowCall__Inputs(this);
  }

  get outputs(): CreateAgreementAndPayEscrowCall__Outputs {
    return new CreateAgreementAndPayEscrowCall__Outputs(this);
  }
}

export class CreateAgreementAndPayEscrowCall__Inputs {
  _call: CreateAgreementAndPayEscrowCall;

  constructor(call: CreateAgreementAndPayEscrowCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _conditionIds(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get _timeLocks(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _accessConsumer(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _idx(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _rewardAddress(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[9].value.toBigIntArray();
  }

  get _receivers(): Array<Address> {
    return this._call.inputValues[10].value.toAddressArray();
  }
}

export class CreateAgreementAndPayEscrowCall__Outputs {
  _call: CreateAgreementAndPayEscrowCall;

  constructor(call: CreateAgreementAndPayEscrowCall) {
    this._call = call;
  }
}

export class CreateVaultAgreementCall extends ethereum.Call {
  get inputs(): CreateVaultAgreementCall__Inputs {
    return new CreateVaultAgreementCall__Inputs(this);
  }

  get outputs(): CreateVaultAgreementCall__Outputs {
    return new CreateVaultAgreementCall__Outputs(this);
  }
}

export class CreateVaultAgreementCall__Inputs {
  _call: CreateVaultAgreementCall;

  constructor(call: CreateVaultAgreementCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _did(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _conditionIds(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get _timeLocks(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _timeOuts(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _vaultAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class CreateVaultAgreementCall__Outputs {
  _call: CreateVaultAgreementCall;

  constructor(call: CreateVaultAgreementCall) {
    this._call = call;
  }
}

export class DeployVaultCall extends ethereum.Call {
  get inputs(): DeployVaultCall__Inputs {
    return new DeployVaultCall__Inputs(this);
  }

  get outputs(): DeployVaultCall__Outputs {
    return new DeployVaultCall__Outputs(this);
  }
}

export class DeployVaultCall__Inputs {
  _call: DeployVaultCall;

  constructor(call: DeployVaultCall) {
    this._call = call;
  }

  get _lendingPool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _dataProvider(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _weth(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _agreementFee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _treasuryAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _borrower(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _lender(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class DeployVaultCall__Outputs {
  _call: DeployVaultCall;

  constructor(call: DeployVaultCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _agreementStoreManagerAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _nftLockConditionAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _depositConditionAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _borrowConditionAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _repayConditionAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _withdrawCollateralAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _transferConditionAddress(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _vaultLibrary(): Address {
    return this._call.inputValues[8].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateNVMFeeCall extends ethereum.Call {
  get inputs(): UpdateNVMFeeCall__Inputs {
    return new UpdateNVMFeeCall__Inputs(this);
  }

  get outputs(): UpdateNVMFeeCall__Outputs {
    return new UpdateNVMFeeCall__Outputs(this);
  }
}

export class UpdateNVMFeeCall__Inputs {
  _call: UpdateNVMFeeCall;

  constructor(call: UpdateNVMFeeCall) {
    this._call = call;
  }

  get _newFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateNVMFeeCall__Outputs {
  _call: UpdateNVMFeeCall;

  constructor(call: UpdateNVMFeeCall) {
    this._call = call;
  }
}
